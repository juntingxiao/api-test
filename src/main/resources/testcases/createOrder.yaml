name: "createOrder"
desc: "员工-租区报事流程"
#运行开关
run: "off"
#引用其他用例
#referenceCaseName: baidutest

environment:
  baseUrl: "https://cpms-test.crland.com.cn"
#  baseUrl: "https://mixcpms-uat.crland.com.cn"
  env: "test"


#这里是执行步骤 （场景）
steps:
#  登录
  - interfaceName: loginApi
    run: "on"
    name: "登录"
    actionParams:
      username: "18700000012"
      password: "hls_1014"
    function:
      functionName: "base64"
#    encryption: "base64"
#    runSql:
#      - beforeSql: "select id,name from mixc_cpms_auth_uat.sys_project_team where id = ?"
#        beforeSqlValue: [ 1582568235807096833 ]
#      - beforeSql: "select project_no from mixc_cpms_auth_uat.sys_project_team where name = ?"
#        beforeSqlValue: [ "${name}" ]
#        afterSql: "select * from mixc_cpms_auth_uat.sys_project_team where id = ?"
#        afterSqlValue: [ "${id}" ]
    extracts:
       - key: "token"
         value: "$.data.tokenValue"
         save: "global"
#       - key: mobile
#         value: "$.xxxx"
    asserts:
      - actual: "$.code"
        expression: "eq"
        expect: 0
        message: "请求状态码错误"
#  创建租区工单
  - interfaceName: rentCreateOrderApi
    name: "example"
    run: "on"
    actionParams:
      projectNo: "20098"
      workOrderType: "1"
      areaType: 2
    extracts:
      - key: "workOrderId"
        value: "$.data"
        save: "global"
    asserts:
      - actual: "$.code"
        expression: "eq"
        expect: 0
        message: "request error"
#  预处理
  - interfaceName: preHandleApi
    name: "预处理-租区工单"
    run: "on"
    actionParams:
#      workOrderId: "${workOrderId}"
      classifyId: 1000
    asserts:
      - actual: "$.code"
        expression: "eq"
        expect: 0
        message: "请求状态码错误"
#   领取工单
  - interfaceName: drawDownApi
    name: "领取工单-租区工单"
    run: "on"
#    actionParams:
#      workOrderId: "${workOrderId}"
#  上传图片
  - interfaceName: uploadFileApi
    name: "上传到达现场图片-租区工单"
    run: "on"
    actionParams:
      uploadFile: "D:\\myProjects\\api-test\\src\\main\\resources\\image\\uploadFile.jpg"
    extracts:
      - key: "ossFileName"
        value: "$.data.ossFileName"
        save: "global"
    asserts:
      - actual: "$.code"
        expression: "eq"
        expect: 0
        message: "请求状态码错误"
      - actual: "$.codeSuccess"
        expression: "eq"
        expect: true
        message: "上传状态码错误"
#  到达现场
  - interfaceName: arriveSpotApi
    name: "提交到达现场数据"
    run: "on"
    actionParams:
      ossFileName: "${ossFileName}"
      workOrderId: "${workOrderId}"
#    jsonPathParams:
#      ossFileName.ossFileName: "2023-06-25/uploadFile1687688520369202.jpg"
    asserts:
      - actual: "$.code"
        expression: "eq"
        expect: 0
        message: "请求状态码错误"
#  上传已完成的图片
  - interfaceName: uploadFileApi
    name: "上传已完成工单的照片-租区工单"
    run: "on"
    actionParams:
      uploadFile: "D:\\myProjects\\api-test\\src\\main\\resources\\image\\uploadFile.jpg"
#    extracts:
#      - key: "ossFileName"
#        value: "$.data.ossFileName"
#        save: "global"
    asserts:
      - actual: "$.code"
        expression: "eq"
        expect: 0
        message: "请求状态码错误"
      - actual: "$.codeSuccess"
        expression: "eq"
        expect: true
        message: "上传状态码错误"
#  处理工单完成
  - interfaceName: handleTaskApi
    name: "处理工单完成-租区工单"
    run: "off"
    actionParams:
      ossFileName: "${ossFileName}"
      workOrderId: "${workOrderId}"
      classifyId: "11"
    asserts:
      - actual: "$.code"
        expression: "eq"
        expect: 0
        message: "处理工单完成断言错误"


#    - clasName: xxxx
#  - interfaceName: order
#  - interfaceName: xxxx
#提取的信息  提取的login 对应上面login接口，
#  表示该接口需要提取，提取用value里面的表达式(JSONpath)，保存在内存字典里面 key用token
#这里后面的接口有依赖需要用到token 就可以去字典里面找

#extracts:
#  - login:
#      - key: token
#        value: "$.token"
#      - key: mobile
#        value: "$.xxxx"
#断言信息
#asserts:
#  - "${name}": "eq:xxxx"
#  - "${xxxx}": "contains:xxxx"
#  - "$.code": "eq:0"
#这里就是一个场景用例的描述
#上面的interfaceName 对应login.yaml  这个文件里面就是描述请求login接口的基本信息
